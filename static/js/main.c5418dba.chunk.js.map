{"version":3,"sources":["components/button/button.componennt.jsx","components/button2/button.componennt2.jsx","components/input/input.component.jsx","components/input_box/input_box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["BUTTON","params","class","id","download","type","onClick","text","BUTTON2","INPUT","onChange","for","InputBox","props","name","value","selected","x","toast","configure","App","imgRef","useRef","ctxRef","checkColor","colors","lists","newcolor","c","length","lowColor","choseGroup","index","indexOf","push","calculateAverageColor","count","R","G","B","newColor","i","toFixed","Array","min","array","Math","apply","color","x0","y0","z0","all","sqrt","minimum","className","src","ref","alt","window","location","reload","current","img","canvas","width","height","ctx","getContext","drawImage","imgData","getImageData","randomNum","number","newNumber","numbers","floor","random","randomNumber","data","list2","color2","strUser","document","getElementById","end","putImageData","style","display","image","toDataURL","replace","removeAttribute","setAttribute","e","file","target","files","reader","FileReader","undefined","readAsArrayBuffer","onloadend","evt","bytes","Uint8Array","result","blob","Blob","buffer","clearRect","beginPath","clear","readAsDataURL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c5418dba.chunk.js","sourcesContent":["import \"./button.style.scss\";\r\n\r\nexport default function BUTTON(params) {\r\n  return (\r\n    <div class=\"container\">\r\n      <a id=\"download\" download=\"triangle.png\">\r\n        <button\r\n          class=\"button\"\r\n          id=\"button2\"\r\n          type=\"button\"\r\n          onClick={params.onClick}\r\n        >\r\n          {params.text}\r\n        </button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import \"./button.style.scss\";\r\n\r\nexport default function BUTTON2(params) {\r\n  return (\r\n    <div class=\"container\">\r\n      <button class=\"button\" onClick={params.onClick}>\r\n        {params.text}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import \"./input.style.scss\";\r\n\r\nexport default function INPUT(params) {\r\n  return (\r\n    <div class=\"container\">\r\n      <input type=\"file\" id=\"file\" class=\"file\" onChange={params.onChange} />\r\n      <label for=\"file\" class=\"button\">\r\n        Select file\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import \"./input_box.style.css\";\r\nexport const InputBox = (props) => (\r\n  <div>\r\n    <p>Enter your number of box</p>\r\n    {/* <input type=\"number\" autocomplete=\"off\" id=\"enterInput\" className=\"text\" /> */}\r\n    <select name=\"2\" id=\"plan\">\r\n      <option value=\"2\">2</option>\r\n      <option value=\"5\">5</option>\r\n      <option value=\"10\" selected>\r\n        10\r\n      </option>\r\n      <option value=\"20\">20</option>\r\n    </select>\r\n  </div>\r\n);\r\n","import \"./App.scss\";\nimport BUTTON from \"./components/button/button.componennt\";\nimport BUTTON2 from \"./components/button2/button.componennt2\";\nimport INPUT from \"./components/input/input.component\";\nimport { InputBox } from \"./components/input_box/input_box.component\";\nimport { useRef } from \"react\";\nimport { toast } from \"react-toastify\";\n// Import toastify css file\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// toast-configuration method,\n// it is compulsory method.\nvar x = \"\";\ntoast.configure();\n\nfunction App() {\n  const imgRef = useRef();\n  const ctxRef = useRef();\n\n  const clear = () => {\n    var c = document.getElementById(\"myCanvas\");\n    var ctx = c.getContext(\"2d\");\n    ctx.clearRect(0, 0, c.width, c.height);\n    ctx.beginPath();\n  };\n\n  const handleChange = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    if (file !== undefined) {\n      const data = reader.readAsArrayBuffer(file);\n\n      reader.onloadend = (evt) => {\n        const bytes = new Uint8Array(evt.target.result);\n        const blob = new Blob([bytes.buffer]);\n\n        reader.onloadend = (e) => {\n          imgRef.current.style.display = \"block\";\n          ctxRef.current.style.display = \"none\";\n          clear();\n          imgRef.current.src = e.target.result;\n        };\n        reader.readAsDataURL(blob);\n      };\n    }\n  };\n\n  const downloadImage = () => {\n    debugger;\n    var download = document.getElementById(\"download\");\n    var image = document\n      .getElementById(\"myCanvas\")\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    if (\n      document.getElementById(\"myCanvas\").style.display === \"\" ||\n      document.getElementById(\"myCanvas\").style.display === \"none\"\n    ) {\n      toast(\"Please add your image and click on 'Create gray image'\");\n      download.removeAttribute(\"href\");\n    } else {\n      // debugger;\n      download.setAttribute(\"href\", image);\n    }\n    window.location.reload(false);\n  };\n\n  //create randome number\n  const randomNumber = (number) => {\n    // debugger;\n    var numbers = [];\n    var newNumber;\n    for (let i = 0; i < 20; i++) {\n      newNumber = Math.floor(Math.random() * number);\n      //check dublicate\n      if (numbers.indexOf(newNumber) === -1 && newNumber % 4 === 0) {\n        numbers[i] = newNumber;\n      } else {\n        i = i - 1;\n      }\n    }\n    return numbers;\n  };\n\n  //check color with 2 color\n  const checkColor = (colors, lists, newcolor) => {\n    // debugger;\n\n    for (let c = 0; c < colors.length; c += 4) {\n      let lowColor;\n      switch (lists.length) {\n        case 2:\n          lowColor = choseGroup(\n            [colors[c], colors[c + 1], colors[c + 2]],\n            [newcolor[0], newcolor[1]]\n          );\n          break;\n        case 5:\n          lowColor = choseGroup(\n            [colors[c], colors[c + 1], colors[c + 2]],\n            [newcolor[0], newcolor[1], newcolor[2], newcolor[3], newcolor[4]]\n          );\n          break;\n        case 10:\n          lowColor = choseGroup(\n            [colors[c], colors[c + 1], colors[c + 2]],\n            [\n              newcolor[0],\n              newcolor[1],\n              newcolor[2],\n              newcolor[3],\n              newcolor[4],\n              newcolor[5],\n              newcolor[6],\n              newcolor[7],\n              newcolor[8],\n              newcolor[9],\n            ]\n          );\n          break;\n        case 20:\n          lowColor = choseGroup(\n            [colors[c], colors[c + 1], colors[c + 2]],\n            [\n              newcolor[0],\n              newcolor[1],\n              newcolor[2],\n              newcolor[3],\n              newcolor[4],\n              newcolor[5],\n              newcolor[6],\n              newcolor[7],\n              newcolor[8],\n              newcolor[9],\n              newcolor[10],\n              newcolor[11],\n              newcolor[12],\n              newcolor[13],\n              newcolor[14],\n              newcolor[15],\n              newcolor[16],\n              newcolor[17],\n              newcolor[18],\n              newcolor[19],\n            ]\n          );\n          break;\n        default:\n          break;\n      }\n      let index = newcolor.indexOf(lowColor);\n      lists[index].push(colors[c]);\n      lists[index].push(colors[c + 1]);\n      lists[index].push(colors[c + 2]);\n      lists[index].push(colors[c + 3]);\n    }\n    // debugger;\n    return lists;\n  };\n\n  //calculate average color in group\n  const calculateAverageColor = (colors) => {\n    // debugger;\n    let R = 0,\n      G = 0,\n      B = 0,\n      count = 0,\n      newColor = [];\n    for (let i = 0; i < colors.length; i += 4) {\n      R = colors[i] + R;\n      G = colors[i + 1] + G;\n      B = colors[i + 2] + B;\n    }\n    count = colors.length / 4;\n    R = R / count;\n    G = G / count;\n    B = B / count;\n    newColor[0] = R.toFixed();\n    newColor[1] = G.toFixed();\n    newColor[2] = B.toFixed();\n    newColor[3] = 255;\n    return newColor;\n  };\n  Array.min = function (array) {\n    return Math.min.apply(Math, array);\n  };\n  //chose the best group\n  const choseGroup = (color, colors) => {\n    // debugger;\n    let all = [],\n      x0,\n      y0,\n      z0;\n    for (let i = 0; i < colors.length; i++) {\n      x0 = (color[0] - colors[i][0]) * (color[0] - colors[i][0]);\n      y0 = (color[1] - colors[i][1]) * (color[1] - colors[i][1]);\n      z0 = (color[2] - colors[i][2]) * (color[2] - colors[i][2]);\n      all[i] = Math.sqrt(x0 + y0 + z0);\n    }\n    let minimum = Array.min(all);\n    let index = all.indexOf(minimum);\n    return colors[index];\n  };\n\n  const createBlackAndWhite = () => {\n    debugger;\n    if (x === \"X\") {\n      window.location.reload(false);\n    }\n    x = \"X\";\n    if (imgRef.current) {\n      const img = imgRef.current;\n      const canvas = ctxRef.current;\n\n      if (img.width !== 0) {\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        if (canvas.width > 0 && canvas.height > 0) {\n          const ctx = canvas.getContext(\"2d\");\n\n          ctx.drawImage(img, 0, 0);\n          const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n          // get random numbers\n          var randomNum = randomNumber(imgData.data.length);\n\n          //for two color\n          //check all color with 2 color\n          let list2 = [\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n          ];\n          let color2 = [\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n          ];\n\n          // debugger;\n          for (let i = 0; i < randomNum.length; i++) {\n            color2[i][0] = imgData.data[randomNum[i]];\n            color2[i][1] = imgData.data[randomNum[i] + 1];\n            color2[i][2] = imgData.data[randomNum[i] + 2];\n            color2[i][3] = 255;\n          }\n\n          let e = document.getElementById(\"plan\");\n          let strUser = e.value;\n          switch (strUser) {\n            case \"2\":\n              list2 = checkColor(imgData.data, [list2[0], list2[1]], color2);\n              break;\n            case \"5\":\n              list2 = checkColor(\n                imgData.data,\n                [list2[0], list2[1], list2[2], list2[3], list2[4]],\n                color2\n              );\n              break;\n            case \"10\":\n              list2 = checkColor(\n                imgData.data,\n                [\n                  list2[0],\n                  list2[1],\n                  list2[2],\n                  list2[3],\n                  list2[4],\n                  list2[5],\n                  list2[6],\n                  list2[7],\n                  list2[8],\n                  list2[9],\n                ],\n                color2\n              );\n              break;\n\n            case \"20\":\n              list2 = checkColor(\n                imgData.data,\n                [\n                  list2[0],\n                  list2[1],\n                  list2[2],\n                  list2[3],\n                  list2[4],\n                  list2[5],\n                  list2[6],\n                  list2[7],\n                  list2[8],\n                  list2[9],\n                  list2[10],\n                  list2[11],\n                  list2[12],\n                  list2[13],\n                  list2[14],\n                  list2[15],\n                  list2[16],\n                  list2[17],\n                  list2[18],\n                  list2[19],\n                ],\n                color2\n              );\n              break;\n\n            default:\n              break;\n          }\n\n          let end = 0;\n          while (end < 20) {\n            for (let index = 0; index < strUser; index++) {\n              color2[index] = calculateAverageColor(list2[index]);\n            }\n\n            debugger;\n            list2 = [\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n              [],\n            ];\n\n            switch (strUser) {\n              case \"2\":\n                list2 = checkColor(imgData.data, [list2[0], list2[1]], color2);\n                break;\n              case \"5\":\n                list2 = checkColor(\n                  imgData.data,\n                  [list2[0], list2[1], list2[2], list2[3], list2[4]],\n                  color2\n                );\n                break;\n              case \"10\":\n                list2 = checkColor(\n                  imgData.data,\n                  [\n                    list2[0],\n                    list2[1],\n                    list2[2],\n                    list2[3],\n                    list2[4],\n                    list2[5],\n                    list2[6],\n                    list2[7],\n                    list2[8],\n                    list2[9],\n                  ],\n                  color2\n                );\n                break;\n\n              case \"20\":\n                list2 = checkColor(\n                  imgData.data,\n                  [\n                    list2[0],\n                    list2[1],\n                    list2[2],\n                    list2[3],\n                    list2[4],\n                    list2[5],\n                    list2[6],\n                    list2[7],\n                    list2[8],\n                    list2[9],\n                    list2[10],\n                    list2[11],\n                    list2[12],\n                    list2[13],\n                    list2[14],\n                    list2[15],\n                    list2[16],\n                    list2[17],\n                    list2[18],\n                    list2[19],\n                  ],\n                  color2\n                );\n                break;\n\n              default:\n                break;\n            }\n\n            end++;\n          }\n          let newColor;\n          // debugger;\n          for (let i = 0; i < imgData.data.length; i += 4) {\n            // find low color\n            switch (strUser) {\n              case \"2\":\n                newColor = choseGroup(\n                  [imgData.data[i], imgData.data[i + 1], imgData.data[i + 2]],\n                  [color2[0], color2[1]]\n                );\n                break;\n              case \"5\":\n                newColor = choseGroup(\n                  [imgData.data[i], imgData.data[i + 1], imgData.data[i + 2]],\n                  [color2[0], color2[1], color2[2], color2[3], color2[4]]\n                );\n                break;\n              case \"10\":\n                newColor = choseGroup(\n                  [imgData.data[i], imgData.data[i + 1], imgData.data[i + 2]],\n                  [\n                    color2[0],\n                    color2[1],\n                    color2[2],\n                    color2[3],\n                    color2[4],\n                    color2[5],\n                    color2[6],\n                    color2[7],\n                    color2[8],\n                    color2[9],\n                  ]\n                );\n                break;\n\n              case \"20\":\n                newColor = choseGroup(\n                  [imgData.data[i], imgData.data[i + 1], imgData.data[i + 2]],\n                  [\n                    color2[0],\n                    color2[1],\n                    color2[2],\n                    color2[3],\n                    color2[4],\n                    color2[5],\n                    color2[6],\n                    color2[7],\n                    color2[8],\n                    color2[9],\n                    color2[10],\n                    color2[11],\n                    color2[12],\n                    color2[13],\n                    color2[14],\n                    color2[15],\n                    color2[16],\n                    color2[17],\n                    color2[18],\n                    color2[19],\n                  ]\n                );\n                break;\n\n              default:\n                break;\n            }\n\n            imgData.data[i] = newColor[0];\n            imgData.data[i + 1] = newColor[1];\n            imgData.data[i + 2] = newColor[2];\n            imgData.data[i + 3] = newColor[3];\n          }\n\n          ctx.putImageData(imgData, 0, 0);\n          ctxRef.current.style.display = \"block\";\n          img.style.display = \"none\";\n          img.src = \"\";\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"column\">\n        <img src=\"\" ref={imgRef} alt=\"\" />\n        <canvas id=\"myCanvas\" ref={ctxRef} />\n      </div>\n      <div className=\"column\">\n        <InputBox />\n        <BUTTON2 text=\"Create new image\" onClick={createBlackAndWhite} />\n        <BUTTON text=\"Download image\" onClick={downloadImage} />\n        <INPUT onChange={handleChange} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}